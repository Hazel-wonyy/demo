springboot:
  jwt:
    access-secret: DeaguGreenArtAcademyClass502ForJavaSpringBootaaaasdf
    refresh-secret: HelloWorldRefreshTokenCreateBySecretHaHaaasdfasdf

    token-type: Bearer

app:
  auth:
    header-scheme-name: authorization
    token-type: Bearer
    aceess-secret: DeaguGreenArtAcademyClass502ForJavaSpringBoot
    accessTokenExpiry: 1296000000 #86400000-1? #3600000-60?
    refresh-secret: ForJavaSpringBootClass502DaeguGreenArtAcademy
    refreshTokenExpiry: 1296000000 #15?
    redis-access-black-key: "D-AT-BLACK"
    redis-refresh-key: "D-RT"
  oauth2:
    authorized-redirect-uris:
#      - http://localhost:8080/oauth/redirect
      - http://49.50.172.57:8080/oauth/redirect
      - http://49.50.172.57:8080/login/oauth2/code/kakao
      - http://49.50.172.57:8080/signin/oauth/code/google
      - http://localhost:8080/oauth/redirect


mybatis:
  type-aliases-package: com.timely.demo
  mapper-locations: mapper/*.xml

spring:
  profiles:
    include: oauth
  servlet:
    multipart:
      max-file-size: 3MB
      max-request-size: 12MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://49.50.172.57:3306/test?useSSL=false&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true&profileSQL=true&logger=Slf4JLogger&maxQuerySizeToLog=999999 #jdbc-url: jdbc:mariadb://192.168.0.144:3306/team_d
    username: whkim
    password: timely4958!@
  jpa:
    hibernate:
      ddl-auto: update #update #create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 50
        order_updates: true
        order_inserts: true
  data:
    redis:
      host: localhost
      port: 6379
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 56580434798-9i8t55696slolude0n43tjdf2al4fqgs.apps.googleusercontent.com
            client-secret: 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
            scope:
              - profile
              - email
          kakao:
            client-id: f3d8731db5f4c47479fb11e3a24ccc85
            client-secret: 4pirrMyQu6uPJExEOQ2opDmWwVmcv6Ff
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            clientName: Kakao
        provider:
#          naver:
#            authorization-uri: https://nid.naver.com/oauth2.0/authorize
#            token-uri: https://nid.naver.com/oauth2.0/token
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

## cors
cors:
  allowed-origins: 'http://localhost:8080'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600

# swagger
springdoc:
  swagger-ui:
    path: /swagger.html

file:
  dir: D:/home/download

---

spring:
  config:
    activate:
      on-profile: "test"
  datasource:
    url: jdbc:mysql://49.50.172.57:3306/test


---
app:
  oauth2:
    authorized-redirect-uris:
      - http://localhost:8080/oauth/redirect

spring:
  config:
    activate:
      on-profile: "prod"
  data:
    redis:
      host: 192.168.0.144
  datasource:
    jdbc-url: jdbc:mysql://49.50.172.57:3306/test?rewriteBatchedStatements=true
file:
  dir: /home/download
server:
  port: 8080

cors:
  allowed-origins: 'http://49.50.172.57:3306'


